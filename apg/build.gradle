apply plugin: 'android'

dependencies {
    compile 'com.android.support:support-v4:19.0.1'
    compile 'com.android.support:support-v13:19.0.1'
    compile 'com.android.support:appcompat-v7:19.0.1'
    compile 'com.github.johnkil.android-appmsg:appmsg:1.2.0'
    compile 'se.emilsjolander:stickylistheaders:2.1.5'
    compile 'com.google.zxing:core:2.2'
    compile 'com.google.zxing:android-integration:3.0.0'
    compile 'com.google.guava:guava:16.0.1'
    compile project(':libs:AndroidBootstrap:AndroidBootstrap')
    compile project(':libs:bc:core')
    compile project(':libs:bc:pg')
    compile project(':libs:bc:prov')
    compile project(':libs:HtmlTextView')
    compile project(':OpenPGP-Keychain-API:libraries:openpgp-api-library')
    compile project(':OpenPGP-Keychain-API:libraries:openkeychain-api-library')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    buildTypes {
        release {
            runProguard true
            proguardFile file('../proguard.cfg')
            proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }

    dexOptions {
        jumboMode = true
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java',
                            '../libs/email2/src',
                            '../libs/email2/emailcommon/src',
                            '../libs/ex/chips/src',
                            '../libs/ex/common/java',
                            '../libs/photoviewer/appcompat/src',
                            '../libs/photoviewer/src',
                          ]
            res.srcDirs = ['src/main/res',
                           '../libs/email2/res',
                           '../libs/email2/emailcommon/res',
                           '../libs/ex/chips/res',
                           '../libs/photoviewer/appcompat/res',
                           '../libs/photoviewer/res',
                          ]
        }
    }

    if (project.hasProperty('signingStoreLocation') &&
        project.hasProperty('signingStorePassword') &&
        project.hasProperty('signingKeyAlias') &&
        project.hasProperty('signingKeyPassword')) {

        signingConfigs {
            release {
                storeFile file(signingStoreLocation)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }
        buildTypes.release.signingConfig = signingConfigs.release
    } else {
        buildTypes.release.signingConfig = null
    }

    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
    }
}
